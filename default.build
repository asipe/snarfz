<?xml version="1.0"?>
<!-- Copyright (c) Andy Sipe. All rights reserved. Licensed under the MIT License (MIT). See License.txt in the project root for license information. -->
<project name="Build" basedir=".">
  <property name="nant.settings.currentframework" value="net-4.0"/>
  <property name="debug.status" value="Full"/>
  <property name="root.dir" value="${project::get-base-directory()}" readonly="true"/>
  <property name="src.dir" value="${root.dir}\src" readonly="true"/>
  <property name="debug.dir" value="${root.dir}\debug" readonly="true"/>
  <property name="apps.dir" value="${debug.dir}\apps" readonly="true"/>
  <property name="lib.dir" value="${src.dir}\lib" readonly="true"/>
  <property name="vsdebug.dir" value="${root.dir}\vsdebug" readonly="true"/>
  <property name="test.results.dir" value="${root.dir}\test_results" readonly="true"/>
  <property name="deploy.dir" value="${root.dir}\deploy" readonly="true"/>
  <property name="nunit.test.assembly" value=""/>
  <property name="nunit.exe" value="nunit-console.exe"/>
  <property name="verbose" value="false" overwrite="false"/>

  <target name="ExecuteTests">
    <exec program="thirdparty\nunit.runners.2.6.1\tools\${nunit.exe}"
          verbose="${verbose}"
          commandline="${debug.dir}\${nunit.test.assembly} /xml=test_results/${nunit.test.assembly}_results.xml /noshadow"
          workingdir="${root.dir}"
          failonerror="true"/>
  </target>
  
  <target name="Clean">
    <delete dir="${debug.dir}"/>
    <mkdir dir="${debug.dir}"/>
    <delete dir="${deploy.dir}"/>
    <mkdir dir="${deploy.dir}"/>
    <delete dir="${test.results.dir}"/>
    <mkdir dir="${test.results.dir}"/> 

    <copy todir="${debug.dir}" flatten="true">
      <fileset basedir="${lib.dir}">
        <include name="*.*"/>
      </fileset>
    </copy>
  </target>

  <target name="Build.SupaCharge">
    <exec program="thirdparty\NAnt.Portable.0.92\nant.exe"
          workingdir="submodules\supacharge"
          commandline="Clean Build.All Run.Tests -D:current.framework=net-4.0 -D:lib.dir=${lib.dir} -D:nunit.exe=${root.dir}\thirdparty\nunit.runners.2.6.1\tools\nunit-console.exe -D:verbose=true"
          failonerror="true"
          verbose="${verbose}" />

    <copy todir="${lib.dir}" flatten="true" verbose="${verbose}">
      <fileset basedir="submodules\supacharge\debug\">
        <include name="SupaCharge*.dll"/>
      </fileset>
    </copy>
  </target>

  <target name="Build.Snarfz.Core">
    <csc debug="${debug.status}" target="library" output="${debug.dir}\Snarfz.Core.dll" warnaserror="true">
      <sources basedir="${src.dir}">
        <include name="Snarfz.Core\**\*.cs"/>
        <include name="Properties\*.cs"/>
      </sources>
      <references basedir="${debug.dir}">
        <include name="SupaCharge.Core.dll"/>
      </references>
    </csc>
  </target>

  <target name="Build.Snarfz.UnitTests">
    <csc debug="${debug.status}" target="library" output="${debug.dir}\Snarfz.UnitTests.dll" warnaserror="true">
      <sources basedir="${src.dir}">
        <include name="Snarfz.UnitTests\**\*.cs"/>
        <include name="Properties\*.cs"/>
      </sources>
      <references basedir="${debug.dir}" >
        <include name="Nunit.Framework.dll"/>
        <include name="Moq.dll"/>
        <include name="Ploeh.AutoFixture.dll"/>
        <include name="SupaCharge.Testing.dll"/>
        <include name="SupaCharge.Core.dll"/>
        <include name="Snarfz.Core.dll"/>
        <include name="KellermanSoftware.Compare-NET-Objects.dll"/>
      </references>
    </csc>
  </target>

  <target name="Build.All" depends="Build.Snarfz.Core,
                                    Build.Snarfz.UnitTests"/>
  
  <target name="Run.UnitTests" depends="Build.Snarfz.UnitTests">
    <property name="nunit.test.assembly" value="Snarfz.UnitTests.dll"/>
    <call target="ExecuteTests"/>
  </target>

  <target name="Cycle" depends ="Build.All, Run.UnitTests"/>

  <target name="Deploy" depends ="Build.All">
    <property name="raw.deploy.dir" value="${deploy.dir}\raw"/>
    <property name="merged.deploy.dir" value="${deploy.dir}\merged"/>
    <mkdir dir="${deploy.dir}" verbose="${verbose}"/>
    <mkdir dir="${raw.deploy.dir}" verbose="${verbose}"/>
    <mkdir dir="${merged.deploy.dir}" verbose="${verbose}"/>
    
    <copy todir="${raw.deploy.dir}" verbose="${verbose}">
      <fileset basedir="${debug.dir}">
        <include name="snarfz.core.*"/>
        <include name="supacharge.core.*"/>
      </fileset>
    </copy>

    <exec program="thirdparty\ilmerge.2.13.0307\ILMerge.exe"
          verbose="${verbose}"
          commandline="/t:library /out:${merged.deploy.dir}\Snarfz.Core.dll ${raw.deploy.dir}\Snarfz.Core.dll ${raw.deploy.dir}\SupaCharge.Core.dll"
          workingdir="${root.dir}"
          failonerror="true"/>
  </target>

  <target name="Init.Lib">
    <copy todir="${lib.dir}" flatten="true" verbose="${verbose}">
      <fileset basedir="thirdparty">
        <include name="AutoFixture.2.11.0\lib\Ploeh.AutoFixture.dll"/>
        <include name="CompareNETObjects.1.6.0.0\lib\KellermanSoftware.Compare-NET-Objects.dll"/>
        <include name="Moq.3.1.416.3\lib\Moq.dll"/>
        <include name="NUnit.2.6.1\lib\nunit.framework.dll"/>
      </fileset>
    </copy>
  </target>

  <target name="Init.VSDebug" depends="Init.Lib">
    <mkdir dir="${vsdebug.dir}" verbose="${verbose}"/>
    <copy todir="${vsdebug.dir}" verbose="${verbose}">
      <fileset basedir="${lib.dir}">
        <include name="*.dll"/>
        <include name="*.pdb"/>
      </fileset>
    </copy>
  </target>  
</project>
