<?xml version="1.0"?>
<!-- Copyright (c) Andy Sipe. All rights reserved. Licensed under the MIT License (MIT). See License.txt in the project root for license information. -->
<project name="Build" basedir=".">
  <property name="current.framework" value="net-4.0" overwrite="false"/>
  <property name="nant.settings.currentframework" value="${current.framework}"/>
  <property name="debug.status" value="Full"/>
  <property name="root.dir" value="${project::get-base-directory()}" readonly="true"/>
  <property name="src.dir" value="${root.dir}\src" readonly="true"/>
  <property name="debug.dir" value="${root.dir}\debug" readonly="true"/>
  <property name="apps.dir" value="${debug.dir}\apps" readonly="true"/>
  <property name="test.results.dir" value="${root.dir}\test_results" readonly="true"/>
  <property name="deploy.dir" value="${root.dir}\deploy" readonly="true"/>
  <property name="nunit.test.assembly" value=""/>
  <property name="nunit.exe" value="nunit-console.exe"/>
  <property name="verbose" value="false" overwrite="false"/>
  <property name="nuget.working.dir" value="${root.dir}\nugetworking" />

  <target name="ExecuteTests">
    <exec program="${nunit.exe}"
          verbose="${verbose}"
          commandline="${debug.dir}\${current.framework}\${nunit.test.assembly} /xml=test_results/${nunit.test.assembly}_results.xml /noshadow"
          workingdir="${root.dir}"
          failonerror="true"/>
  </target>
  
  <target name="Clean">
    <delete dir="${debug.dir}"/>
    <mkdir dir="${debug.dir}"/>
    <delete dir="${deploy.dir}"/>
    <mkdir dir="${deploy.dir}"/>
    <delete dir="${test.results.dir}"/>
    <mkdir dir="${test.results.dir}"/> 

    <copy todir="${debug.dir}\${current.framework}" flatten="true">
      <fileset basedir="${root.dir}">
        <include name="thirdparty\packages\net-4.0\AutoFixture\lib\net40\Ploeh.AutoFixture.dll"/>
        <include name="thirdparty\packages\net-4.0\CompareNETObjects\lib\KellermanSoftware.Compare-NET-Objects.dll"/>
        <include name="thirdparty\packages\net-4.0\Moq\lib\net40\Moq.dll"/>
        <include name="thirdparty\packages\net-4.0\NUnit\lib\nunit.framework.dll"/>
        <include name="thirdparty\packages\net-4.0\SupaCharge.Core\lib\net40\supacharge.core.dll"/>
        <include name="thirdparty\packages\net-4.0\SupaCharge.Testing\lib\net40\supacharge.testing.dll"/>
      </fileset>
    </copy>
  </target>

  <target name="Build.Snarfz.Core">
    <csc debug="${debug.status}" target="library" output="${debug.dir}\${current.framework}\Snarfz.Core.dll" warnaserror="true">
      <sources basedir="${src.dir}">
        <include name="Snarfz.Core\**\*.cs"/>
        <include name="Properties\*.cs"/>
      </sources>
      <references basedir="${debug.dir}\${current.framework}">
        <include name="SupaCharge.Core.dll"/>
      </references>
    </csc>
  </target>

  <target name="Build.Snarfz.UnitTests">
    <csc debug="${debug.status}" target="library" output="${debug.dir}\${current.framework}\Snarfz.UnitTests.dll" warnaserror="true">
      <sources basedir="${src.dir}">
        <include name="Snarfz.UnitTests\**\*.cs"/>
        <include name="Properties\*.cs"/>
      </sources>
      <references basedir="${debug.dir}\${current.framework}" >
        <include name="Nunit.Framework.dll"/>
        <include name="Moq.dll"/>
        <include name="Ploeh.AutoFixture.dll"/>
        <include name="SupaCharge.Testing.dll"/>
        <include name="SupaCharge.Core.dll"/>
        <include name="Snarfz.Core.dll"/>
        <include name="KellermanSoftware.Compare-NET-Objects.dll"/>
      </references>
    </csc>
  </target>

  <target name="Build.All" depends="Build.Snarfz.Core,
                                    Build.Snarfz.UnitTests"/>
  
  <target name="Run.UnitTests" depends="Build.Snarfz.UnitTests">
    <property name="nunit.test.assembly" value="Snarfz.UnitTests.dll"/>
    <call target="ExecuteTests"/>
  </target>

  <target name="Cycle" depends ="Build.All, Run.UnitTests"/>

  <target name="Deploy" depends ="Build.All">
    <property name="raw.deploy.dir" value="${deploy.dir}\${current.framework}\raw"/>
    <property name="merged.deploy.dir" value="${deploy.dir}\${current.framework}\merged"/>
    <mkdir dir="${raw.deploy.dir}" verbose="${verbose}"/>
    <mkdir dir="${merged.deploy.dir}" verbose="${verbose}"/>
    
    <copy todir="${raw.deploy.dir}" verbose="${verbose}">
      <fileset basedir="${debug.dir}\${current.framework}">
        <include name="snarfz.core.*"/>
        <include name="supacharge.core.*"/>
      </fileset>
    </copy>

    <exec program="${root.dir}\thirdparty\packages\common\ilmerge\ILMerge.exe"
          verbose="${verbose}"
          commandline="/t:library /out:${merged.deploy.dir}\Snarfz.Core.dll ${raw.deploy.dir}\Snarfz.Core.dll ${raw.deploy.dir}\SupaCharge.Core.dll"
          workingdir="${root.dir}"
          failonerror="true"/>
  </target>

  <target name="Build.NugetPackage" depends="Clean Cycle Deploy">
    <delete dir="${nuget.working.dir}" verbose="${verbose}" />
    <copy todir="${nuget.working.dir}\lib\net40" file="${deploy.dir}\${current.framework}\merged\Snarfz.Core.dll" verbose="${verbose}"/>
    <copy todir="${nuget.working.dir}" file="${src.dir}\Snarfz.Nuget.Specs\Snarfz.Core.dll.nuspec" verbose="${verbose}"/>
    
    <exec program="${root.dir}\thirdparty\nuget\nuget.exe"
          verbose="${verbose}"
          commandline="pack ${nuget.working.dir}\Snarfz.Core.dll.nuspec -OutputDirectory ${nuget.working.dir}"
          workingdir="${root.dir}"
          failonerror="true"/>
  </target>
</project>
